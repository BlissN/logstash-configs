input {
    file {
        path => "/home/ubuntu/github-logs/*.csv"
        start_position => beginning
        sincedb_path => "/dev/null"
        tags => [ "github" ]
    }
}

filter {
  if "github" in [tags] {
    csv {
        separator => ","
        skip_header => "true"
        columns => [
          "action",
          "actor",
          "actor_location.country_code",
          "created_at",
          "org",
          "repo",
          "user",
          "public_repo",
          "data.email",
          "data.hook_id",
          "data.events",
          "data.events_were",
          "data.target_login",
          "data.old_user",
          "data.team",
          "data.runner_group_id",
          "data.runner_group_name",
          "data.runner_group_visibility",
          "data.runner_group_allow_public",
          "data.new_repo_permission",
          "data.old_repo_permission",
          "data.started_at",
          "data.cancelled_at",
          "data.head_branch",
          "data.head_sha",
          "data.trigger_id",
          "data.event",
          "data.workflow_id",
          "data.workflow_run_id",
          "data.runner_id",
          "data.runner_name",
          "data.source_version",
          "data.target_version"
        ]        
    }
  
    date {
        match => [ "created_at","UNIX_MS" ]
        target => "@timestamp"
    }
    mutate { 
        add_field => { "department" => "No_info" }
        add_field => { "real_name" => "No_info" }
        remove_field => [ 
          "public_repo",
          "data.email",
          "data.hook_id",
          "data.events",
          "data.events_were",
          "data.target_login",
          "data.old_user",
          "data.runner_group_id",
          "data.runner_group_name",
          "data.runner_group_visibility",
          "data.runner_group_allow_public",
          "data.new_repo_permission",
          "data.old_repo_permission",
          "data.started_at",
	      "data.team",
	      "data.runner_name",
          "data.cancelled_at",
          "data.head_branch",
          "data.head_sha",
          "data.trigger_id",
          "data.workflow_id",
          "data.workflow_run_id",
          "data.runner_id",
          "data.source_version",
          "data.target_version",
          "path",
          "message",
          "host",
          "@version",
          "created_at"
        ]
    }

#
#
#сюда вставить вывод из Github csv users to logstash conf.py
#
#


    if "org.register_self_hosted_runner" in [action] {
        mutate {
            add_field => { "msg" => "A new self-hosted runner was registered" }
        }
    }

    if "repo.download_zip" in [action] {
        mutate {
            add_field => { "msg" => "A source code archive of a repository was downloaded as a ZIP file" }
        }
    }

    if "pull_request_review.submit" in [action] {
        mutate {
            add_field => { "msg" => "A review was submitted for a pull request" }
        }
    }
        
    if "pull_request.create_review_request" in [action] {
        mutate {
            add_field => { "msg" => "A review was requested on a pull request" }
        }
    }

    if [action] == "pull_request.create" {
        mutate {
            add_field => { "msg" => "A pull request was created" }
        }
    }
    
    if "pull_request.merge" in [action] {
        mutate {
            add_field => { "msg" => "A pull request was merged" }
        }
    }
    
    if "pull_request_review_comment.create" in [action] {
        mutate {
            add_field => { "msg" => "A review comment was added to a pull request" }
        }
    }
    
    if "packages.package_version_published" in [action] {
        mutate {
            add_field => { "msg" => "A specific package version was published or republished to a package" }
        }
    }
    
    if "workflows.cancel_workflow_run" in [action] {
        mutate {
            add_field => { "msg" => "A workflow run was cancelled" }
        }
    }
    
    if "workflows.rerun_workflow_run" in [action] {
        mutate {
            add_field => { "msg" => "A workflow run was re-run" }
        }
    }
    
    if "pull_request_review_comment.update" in [action] {
        mutate {
            add_field => { "msg" => "A review comment on a pull request was changed" }
        }
    }
    
    if "issue_comment.destroy" in [action] {
        mutate {
            add_field => { "msg" => "A comment on an issue was deleted from the repository" }
        }
    }
    
    if "issue_comment.update" in [action] {
        mutate {
            add_field => { "msg" => "A comment on an issue (other than the initial one) changed" }
        }
    }
    
    if "integration_installation.repositories_added" in [action] {
        mutate {
            add_field => { "msg" => "Repositories were added to an integration" }
        }
    }
    
    if "integration_installation.repositories_removed" in [action] {
        mutate {
            add_field => { "msg" => "Repositories were removed from an integration" }
        }
    }
    
    if "org.add_member" in [action] {
        mutate {
            add_field => { "msg" => "A user joined an organization" }
        }
    }
    
    if "org.audit_log_export" in [action] {
        mutate {
            add_field => { "msg" => "Audit log entries were exported" }
        }
    }
    
    if "org.invite_member" in [action] {
        mutate {
            add_field => { "msg" => "A new user was invited to join an organization" }
        }
    }
    
    if "org.remove_self_hosted_runner" in [action] {
        mutate {
            add_field => { "msg" => "A self-hosted runner was removed" }
        }
    }
    
    if "protected_branch.create" in [action] {
        mutate {
            add_field => { "msg" => "Branch protection was enabled on a branch" }
        }
    }
    
    if "protected_branch.rejected_ref_update" in [action] {
        mutate {
            add_field => { "msg" => "A branch update attempt was rejected" }
        }
    }
    
    if "pull_request.close" in [action] {
        mutate {
            add_field => { "msg" => "A pull request was closed without being merged" }
        }
    }
    
    if "pull_request.indirect_merge" in [action] {
        mutate {
            add_field => { "msg" => "A pull request was considered merged because the pull request's commits were merged into the target branch" }
        }
    }
    
    if "pull_request.ready_for_review" in [action] {
        mutate {
            add_field => { "msg" => "A pull request was marked as ready for review" }
        }
    }
    
    if "pull_request.remove_review_request" in [action] {
        mutate {
            add_field => { "msg" => "A review request was removed from a pull request" }
        }
    }
    
    if "pull_request_review.delete" in [action] {
        mutate {
            add_field => { "msg" => "A review on a pull request was deleted" }
        }
    }
    
    if "pull_request_review.dismiss" in [action] {
        mutate {
            add_field => { "msg" => "A review on a pull request was dismissed" }
        }
    }    
    if "pull_request_review_comment.delete" in [action] {
        mutate {
            add_field => { "msg" => "A review comment on a pull request was deleted" }
        }
    }
    
    if "repo.actions_enabled" in [action] {
        mutate {
            add_field => { "msg" => "GitHub Actions was enabled for a repository" }
        }
    }
    
    if "repo.add_member" in [action] {
        mutate {
            add_field => { "msg" => "A collaborator was added to a repository" }
        }
    }    
    if "repo.change_merge_setting" in [action] {
        mutate {
            add_field => { "msg" => "Pull request merge options were changed for a repository" }
        }
    }
    
    if "repo.create" in [action] {
        mutate {
            add_field => { "msg" => "A repository was created" }
        }
    }
    
    if "repo.create_actions_secret" in [action] {
        mutate {
            add_field => { "msg" => "A GitHub Actions secret was created for a repository" }
        }
    }    
    if "repo.remove_member" in [action] {
        mutate {
            add_field => { "msg" => "A collaborator was removed from a repository" }
        }
    }
    
    if "repo.update_actions_secret" in [action] {
        mutate {
            add_field => { "msg" => "A GitHub Actions secret was updated" }
        }
    }
    
    if "repo.update_default_branch" in [action] {
        mutate {
            add_field => { "msg" => "The default branch for a repository was changed" }
        }
    }    
    if "team.add_repository" in [action] {
        mutate {
            add_field => { "msg" => "A team was given access and permissions to a repository" }
        }
    }
    
    if "team.remove_member" in [action] {
        mutate {
            add_field => { "msg" => "A member of an organization was removed from a team" }
        }
    }
    
    if "workflows.delete_workflow_run" in [action] {
        mutate {
            add_field => { "msg" => "A workflow run was deleted" }
        }
    }
    
    if "protected_branch.policy_override" in [action] {
        mutate {
            add_field => { "msg" => "A branch protection requirement was overridden by a repository administrator" }
        }
    }    
    if "repo.destroy" in [action] {
        mutate {
            add_field => { "msg" => "A repository was deleted" }
        }
    }

    mutate {
        convert => {
          "msg" => "string"
        }
        convert => {
          "real_name" => "string"
        }
        convert => {
          "department" => "string"
        }

        copy => {
            "msg" => "data.event"
        }
        copy => {
	        "real_name" => "user"
        }
        copy => {
	        "department" => "org"
        }    
	

        remove_field => [ "msg", "real_name", "department" ] 
    }

  }
}




output {
      if "github" in [tags] {
        opensearch {

        }    
      }
#    stdout {}
}

